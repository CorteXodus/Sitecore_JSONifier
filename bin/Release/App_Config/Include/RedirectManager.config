<!--

Shared source Redirect Manager module for Sitecore CMS. Initial release by Paul George, October 2011. http://www.paulgeorge.co.uk

-->
<configuration xmlns:patch="http://www.sitecore.net/xmlconfig/">
    <sitecore>

        <settings>
            <!--  REDIRECT MANAGER URL VALIDATION
            The validation rule used to ensure that just url paths are entered. 
            -->
            <setting name="RedirectManager.UrlPathValidation" value="^(/[-A-Z0-9+&amp;@#/%=~_|!:,.;]*)" />
            
            <!-- REDIRECT MANAGER CHECK DUPLICATES
            If enabled urls are checked for duplicates during the creation dialog process and disallowed.
            Uses 'Exists' method on provider.
            Default: true
            -->
            <setting name="RedirectManager.CheckDuplicates" value="true" />

            <!-- REDIRECT MANAGER DISPLAY LINKS TYPE
            Displays the selected link information in the alerts area for each item. Pipe seperated values.
            Valid values:   primary
                            redirects
                            aliases
                            
            Default: primary|redirects
            -->
            <setting name="RedirectManager.DisplayLinkTypes" value="primary|redirects|aliases" />

            <!-- REDIRECT MANAGER DISPLAY LINKS MAXIMUM
            The maximum number of items to display in the content manager for each enabled links section.
            Default: 30
            -->
            <setting name="RedirectManager.DisplayLinkMaximum" value="30" />

            <!-- REDIRECT MANAGER CHECK SITE CONTEXT
            If enabled, redirects are only enabled if the context site matches one of the selected sites for that redirect.
            Default: true
            -->
            <setting name="RedirectManager.SiteContextChecking" value="true" />

            <!-- REDIRECT MANAGER IGNORED SITES
            Http request processing is disabled for these sites names as defined in the <sites> config section
           -->
            <setting name="RedirectManager.IgnoredSites" value="shell|login|admin|service|modules_shell|modules_website|scheduler|system|publisher|core|master|website_staging" />

            <!-- REDIRECT MANAGER LOG PROCESSOR STOPWATCH
            Logs the time taken by the module to process a redirect for http request request. For testing purposes only as this will create very large log files.
            Default: false
            -->
            <setting name="RedirectManager.LogProcessorStopwatch" value="true" />

        </settings>

        <dataproviders>
            <!-- Providers must implement ILookupProvider interface -->
            <redirectmanager type="RedirectManager.Providers.Sql.LookupProvider, RedirectManager" />
        </dataproviders>

        <pipelines>
            <httpRequestBegin>
                <processor type="RedirectManager.Pipelines.HttpRequest.Redirector, RedirectManager" patch:after="processor[@type='Sitecore.Pipelines.HttpRequest.ItemResolver, Sitecore.Kernel']" />
            </httpRequestBegin>

            <getContentEditorWarnings>
                <processor type="RedirectManager.Pipelines.GetContentEditorWarnings.DisplayLinks, RedirectManager"/>
            </getContentEditorWarnings >

            <publishItem>
                <processor type="RedirectManager.Pipelines.PublishItem.Processor, RedirectManager" patch:after="processor[@type='Sitecore.Publishing.Pipelines.PublishItem.MoveItems, Sitecore.Kernel']" />
            </publishItem>
        </pipelines>

        <processors>
            <uiAddRedirect>
                <processor mode="on" type="RedirectManager.Shell.Framework.Pipelines.AddRedirect, RedirectManager" method="CheckPermissions" />
                <processor mode="on" type="RedirectManager.Shell.Framework.Pipelines.AddRedirect, RedirectManager" method="GetName" />
                <processor mode="on" type="RedirectManager.Shell.Framework.Pipelines.AddRedirect, RedirectManager" method="CheckDuplicate" />
                <processor mode="on" type="RedirectManager.Shell.Framework.Pipelines.AddRedirect, RedirectManager" method="Execute" />
            </uiAddRedirect>

            <uiDeleteRedirect>
                <!--This permission check doesn't work without roles-->
                <!--<processor mode="on" type="RedirectManager.Shell.Framework.Pipelines.DeleteRedirect, RedirectManager" method="CheckPermissions" />-->
                <processor mode="on" type="RedirectManager.Shell.Framework.Pipelines.DeleteRedirect, RedirectManager" method="Delete" />
            </uiDeleteRedirect>
        </processors>

        <commands>
            <command name="redirect:add" type="RedirectManager.Shell.Framework.Commands.AddRedirect, RedirectManager" />
            <command name="redirect:delete" type="RedirectManager.Shell.Framework.Commands.DeleteRedirect, RedirectManager" />
        </commands>
        
        <!--  SPECIFIC TO THE REDIRECT MANAGER SITECORE PROVIDER IMPLEMENTATION -->
        <events>
            <event name="publish:end">
                <handler type="RedirectManager.Providers.Sql.LookupProvider, RedirectManager" method="ClearCache" />
            </event>

            <event name="publish:end:remote">
                <handler type="RedirectManager.Providers.Sql.LookupProvider, RedirectManager" method="ClearCache" />
            </event>
        </events>

    </sitecore>

</configuration>
